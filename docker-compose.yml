
version: '3.8'

services:

  database:
    image: postgres:10-alpine
    hostname: database
    volumes:
      - ./invidious-database:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
      - ./sql:/config/sql
      - ./init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
    networks:
      - database-backend
    deploy:
      placement:
        constraints:
          - node.labels.database-server == true
      restart_policy:
        condition: any
      update_config:
        parallelism: 2
        delay: 10s
        order: stop-first
        monitor: 10s
      rollback_config:
        parallelism: 2
        delay: 10s
        order: stop-first
        monitor: 10s 
    environment:
      POSTGRES_DB: invidious
      POSTGRES_USER: kemal
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}

  server:
    image: quay.io/invidious/invidious:latest
    hostname: invidious
    networks:
      - backend
      - database-backend
#    logging:
#      driver: none
    deploy:
      mode: replicated
      replicas: 6
      restart_policy:
        condition: any
      update_config:
        parallelism: 2
        delay: 10s
        order: stop-first
        monitor: 10s
      rollback_config:
        parallelism: 2
        delay: 10s
        order: stop-first
        monitor: 10s
    environment:
      INVIDIOUS_CONFIG: |
        channel_threads: 4
        check_tables: true
        feed_threads: 4
        db:
          user: kemal
          password: ${DATABASE_PASSWORD}
          host: database
          port: 5432
          dbname: invidious
        full_refresh: false
        https_only: true
        popular_enabled: true
        login_enabled: true
        registration_enabled: true
        statistics_enabled: true
        default_user_preferences:
          dark_mode: true
          quality: dash
        domain: https://${INVIDIOUS_HOSTNAME}/

  filtron:
    image: dalf/filtron:latest
    hostname: filtron
    networks:
      - backend
      - traefik-public
    volumes:
      - /mnt-gluster/config-1/invidious/rules.json:/etc/filtron/rules.json:rw
    deploy:
      mode: replicated
      replicas: 6
      restart_policy:
        condition: any
      update_config:
        parallelism: 2
        delay: 10s
        order: stop-first
        monitor: 10s
      rollback_config:
        parallelism: 2
        delay: 10s
        order: stop-first
        monitor: 10s
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
  
        # Access Router
        - "traefik.http.routers.invidious.rule=Host(`${INVIDIOUS_HOSTNAME}`)"
        - "traefik.http.routers.invidious.tls.certresolver=letsencrypt"
        - "traefik.http.routers.invidious.entrypoints=websecure"
        - "traefik.http.routers.invidious.middlewares=invidious-headers"
        - "traefik.http.routers.invidious.service=invidious-service"

        # Service
        - "traefik.http.services.invidious-service.loadbalancer.server.port=4040"
 #       - "traefik.http.services.invidious-service.loadbalancer.sticky.cookie=true"
#        - "traefik.http.services.invidious-service.loadbalancer.sticky.cookie.secure=true"
  
        # CSP Header middleware
        - "traefik.http.middlewares.invidious-headers.headers.contentSecurityPolicy=default-src 'none'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; connect-src 'self'; manifest-src 'self'; media-src 'self' blob: https://*.googlevideo.com:443 https://*.youtube.com:443; child-src blob:"
    read_only: true
    command: -listen 0.0.0.0:4040 -api 0.0.0.0:4041 -target invidious:3000
    cap_drop:
      - ALL

networks:
  traefik-public:
    external: true
  database-backend:
    driver: overlay
  backend:
    driver: overlay